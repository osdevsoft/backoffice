pagination:
  items_per_page: 20
  pages_per_page: 10
  display_mode: pages #pages, results

language: en-en #default language

#if content to admin is multilanguage
languages:
  - es
  - en

persistence:
  ds160_url:
    repository: S3
    parameters:
      folder: ds_160
  pdf_url:
    repository: S3
    parameters:
      folder: voucher
  interview_instructions_file:
    repository: S3
    parameters:
      folder: interview_instructions

models:

#  user:
#    schema:
#      "nice_name": "Usuarios" #name to show on backoffice navigator list
#      public: false #used to show in public (visitors)
#      "by_user": false #if true, logged user id will be added to post data when model is saved on sheet
#    fields:
#      in_list: #fields to show on backoffice list page
#        - email
#        - name
#        - created_at
#      in_detail: #fields to show on detail page
#        - email
#        - name
#        - password
#        - created_at
#      fillable: #campos rellenables, tanto en la creacion como en la edicion
#        - email
#        - name
#        - password
#      fields_schema:
#        email:
#          nice_name: "Correo"
#        name:
#          nice_name: "Nombre del usuario"
#          tooltip: "Qu√© nombre tiene?"
#          type: "textarea" #type of html field we are going to display
#          classes: "someclass"
#        password:
#          callbacks: #callbacks to be executed when model is saved (list on CallbacksTrait file)
#            - "crypt"
#    "multilanguage_fields":
#      - name
#    related_models: ["note"]


  customer:
    fields:
      in_list:
        - first_name
        - last_name
        - email
        - token
    related_models: ["cart", "note"]

  application:
    schema:
      user_can_create: false
    fields:
      in_list:
        - reference
        - status
        - ds160_num
        - cart.reference
        - cart.num_applications
        - cart.status
      in_detail:
        - reference
        - uuid
        - passport
        - status
        - ds160_num
        - ds160_url
        - utm_source
        - utm_medium
        - utm_campaign
        - data
      fillable:
        - ds160_num
        - ds160_url
      fields_schema:
        ds160_url:
          nice_name: "DS160 pdf"
          tooltip: "Amazon S3 url para el pdf"
          type: "file" #type of html field we are going to display
    filters:
      main:
      data_validated:
        search_fields:
          - { field: status, value: 3, operand: '=' }
        query_filter:
          sortby:
            - { field: updated_at, dir: asc }
    related_models: ["cart", "note", "transaction"]

  cart:
    schema:
      user_can_create: false
    fields:
      in_list:
      - reference
      - status
      - customer.first_name
      - customer.last_name
      - customer.email
      in_detail:
      - num_applications
      - reference
      - status
      - customer.email
      - site.domain
      - country.name
      - fake_email_account
      - passport_delivery_location.area
      - interview_date
      - interview_location.location
      - interview_instructions_file
      - cas_location_date
      - cas_location.address
      fillable:
      - passport_delivery_location.area
      - interview_date
      - interview_location.location
      - interview_instructions_file
      - cas_location_date
      - cas_location.address
      fields_schema:
        interview_date:
          type: date
        cas_location_date:
          type: date
        interview_instructions_file:
          type: file

    filters:
      main:
      completed:
        search_fields:
        - { field: status, value: 4, operand: '=' }
        query_filter:
          sortby:
          - { field: updated_at, dir: asc }
      cart_submitted:
        search_fields:
        - { field: status, value: 8, operand: '=' }
        query_filter:
          sortby:
          - { field: updated_at, dir: asc }
      voucher_sent:
        search_fields:
        - { field: status, value: 12, operand: '=' }
        query_filter:
          sortby:
          - { field: updated_at, dir: asc }
      interview_scheduled:
        search_fields:
        - { field: status, value: 24, operand: '=' }
        query_filter:
          sortby:
          - { field: updated_at, dir: asc }
    related_models: ["application", "voucher", "note", "customer", "country"]

  voucher:
    schema:
      user_can_create: false
    fields:
      in_list:
        - cart.reference
        - pin
        - expiration_date
        - cart.interview_date
      in_detail:
        - pin
        - expiration_date
        - pdf_url
      fillable:
        - pin
        - expiration_date
        - pdf_url
      fields_schema:
        pdf_url:
          nice_name: "Voucher PDF"
          tooltip: "PDF of the payment voucher"
          type: "file" #type of html field we are going to display
        expiration_date:
          type: "date"

  note:
    schema:
      by_user: true
    fields:
      in_list:
        - content
        - created_at
      in_detail:
        - content
      fillable:
        - content

  transaction:
    schema:
      visible_in_navbar: false
    fields:
      in_list:
        - application.reference
        - amount
        - currency
        - gateway
        - gateway_id
        - utm_medium
        - utm_campaign